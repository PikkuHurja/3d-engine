#version 430
layout(local_size_x = 16, local_size_y = 16) in;

layout(binding = 0, r8) uniform writeonly image2D outputImage;
uniform uint seed;

uint hash(uint x) {
    x ^= x >> 16;
    x *= 0x7feb352dU;
    x ^= x >> 15;
    x *= 0x846ca68bU;
    x ^= x >> 16;
    return x;
}

void main() {
    ivec2 coords = ivec2(gl_GlobalInvocationID.xy);
    uvec2 size = imageSize(outputImage);

        //out of bounds
    if(coords.x >= size.x || coords.y >= size.y)
        return;

    uint index = coords.x + coords.y * size.x;
    
    uint randomValue = hash(index + seed);
    float noise = float(randomValue & 0xFFFFFF) / float(0xFFFFFF);  // Normalize to [0,1]

    imageStore(outputImage, coords, vec4(vec3(noise), 1.0));
}