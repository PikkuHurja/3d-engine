#version 430 core
layout(local_size_x = 16, local_size_y = 16) in;

    //gl_draw_triagles
layout(std430, binding = 0) writeonly buffer output_ind{
    uint indecies[];
};
layout(std430, binding = 0) writeonly buffer output_vert{
    vec3 position[];
};
layout(std430, binding = 1) writeonly buffer output_uv{
    vec2 uv[];
};

uniform uvec2 plane_dimentions;



void main(){
    if(gl_GlobalInvocationID.x >= plane_dimentions.x || gl_GlobalInvocationID.y >= plane_dimentions.y)
        return;

    uint index = gl_GlobalInvocationID.x+gl_GlobalInvocationID.y*plane_dimentions.y;
    uv[index] =  vec2(gl_GlobalInvocationID.xy) / vec2(plane_dimentions);
    indecies[]




}
